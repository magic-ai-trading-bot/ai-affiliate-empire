# ============================================================
# AI AFFILIATE EMPIRE - ENVIRONMENT CONFIGURATION
# ============================================================
# See docs/api-setup-guide.md for detailed setup instructions
# See docs/api-setup-checklist.md for step-by-step procedures
# ============================================================

# ============================================================
# ENVIRONMENT & BASIC CONFIGURATION
# ============================================================
NODE_ENV=development
PORT=3000
ENVIRONMENT=production  # development | staging | production

# ============================================================
# AWS SECRETS MANAGER (PRODUCTION)
# ============================================================
# For production: Store secrets in AWS Secrets Manager instead of .env
# Benefits: Centralized secret management, audit logging, rotation support
# See: docs/api-credential-security.md for setup instructions
#
# To enable:
#   1. Setup AWS Secrets Manager (docs/aws-secrets-manager-integration.md)
#   2. Set AWS_SECRETS_MANAGER_ENABLED=true
#   3. Secrets Manager will take precedence over .env
#   4. Falls back to .env if AWS is unavailable
AWS_SECRETS_MANAGER_ENABLED=false
AWS_REGION=us-east-1
SECRET_NAME_PREFIX=ai-affiliate-empire

# ============================================================
# DATABASE CONFIGURATION
# ============================================================
# PostgreSQL with connection pooling for production
# Adjust pool_timeout and connection_limit based on deployment
# pool_timeout: seconds to wait for connection (default: 20)
# connection_limit: max connections from app (default: 20)
#
DATABASE_URL="postgresql://user:password@localhost:5432/ai_affiliate_empire?schema=public&connection_limit=20&pool_timeout=20"
DIRECT_DATABASE_URL="postgresql://user:password@localhost:5432/ai_affiliate_empire?schema=public"

# ============================================================
# REDIS CACHE CONFIGURATION
# ============================================================
# Used for API rate limiting, caching, session management
REDIS_HOST=localhost
REDIS_PORT=6379
REDIS_PASSWORD=
REDIS_DB=0
REDIS_TTL=3600  # Cache TTL in seconds

# ============================================================
# API KEYS - CONTENT GENERATION (REQUIRED)
# ============================================================
# These are the core APIs for content generation
# You need at least OpenAI OR Anthropic for production

# -----------------------------------------------------------
# OpenAI (GPT-4) - Video Script Generation
# -----------------------------------------------------------
# Purpose: AI-powered video script generation
# Cost: ~$30-50/month for standard usage (50 scripts/day)
# Setup: https://platform.openai.com/account/api-keys
# Docs: See docs/api-setup-guide.md Section 1
#
# Format: sk-proj-xxxxxxxxxxxxxx
# Model options: gpt-4-turbo-preview, gpt-4, gpt-3.5-turbo
# Mock mode: Set to 'true' for development without API costs
OPENAI_API_KEY=sk-proj-your-api-key-here
OPENAI_MODEL=gpt-4-turbo-preview
OPENAI_MOCK_MODE=false

# -----------------------------------------------------------
# Anthropic Claude - Blog Post Generation
# -----------------------------------------------------------
# Purpose: High-quality blog post and article generation
# Cost: ~$15-25/month for standard usage (10 blogs/day)
# Setup: https://console.anthropic.com/
# Docs: See docs/api-setup-guide.md Section 2
#
# Format: sk-ant-xxxxxxxxxxxxxx
# Model options: claude-3-5-sonnet-20241022, claude-3-opus-20240229
# Mock mode: Set to 'true' for development without API costs
ANTHROPIC_API_KEY=sk-ant-your-api-key-here
ANTHROPIC_MODEL=claude-3-5-sonnet-20241022
ANTHROPIC_MOCK_MODE=false

# ============================================================
# API KEYS - CONTENT ENRICHMENT (OPTIONAL IN MOCK MODE)
# ============================================================
# These enhance content quality but can run in mock mode

# -----------------------------------------------------------
# ElevenLabs - Text-to-Speech Voice Generation
# -----------------------------------------------------------
# Purpose: Professional text-to-speech narration for videos
# Cost: $28/month Creator plan (100k chars) + $0.30/1k chars overage
# Setup: https://elevenlabs.io/ → Settings → API Keys
# Docs: See docs/api-setup-guide.md Section 3
#
# Voice IDs (professional voices):
#   Adam (male): EXAVITQu4vr4xnSDxMaL
#   Rachel (female): 21m00Tcm4TlvDq8ikWAM
#   Antoni (soft male): ErXwobaYiN019PkySvjV
# To list all voices: curl https://api.elevenlabs.io/v1/voices -H "xi-api-key: YOUR_KEY"
ELEVENLABS_API_KEY=your-elevenlabs-api-key
ELEVENLABS_VOICE_ID=EXAVITQu4vr4xnSDxMaL
ELEVENLABS_MOCK_MODE=false

# -----------------------------------------------------------
# Pika Labs - AI Video Generation
# -----------------------------------------------------------
# Purpose: AI-powered video generation from prompts
# Cost: $28/month Pro plan (2,000 videos/month)
# Setup: https://pika.art/ → Pro Plan + Contact support for API
# Docs: See docs/api-setup-guide.md Section 4
#
# Note: API approval required (2-3 business days)
# Video format: 1080x1920 (vertical), up to 60 seconds
# Generation time: 30-90 seconds per video
PIKALABS_API_KEY=your-pika-labs-api-key
PIKALABS_API_URL=https://api.pikalabs.com/v1
PIKALABS_MOCK_MODE=false

# -----------------------------------------------------------
# DALL-E 3 - Thumbnail Generation
# -----------------------------------------------------------
# Purpose: AI-generated video thumbnails
# Cost: Included in OpenAI pricing (~$0.04/image)
# Uses same API key as OpenAI
DALLE_API_KEY=sk-proj-your-api-key-here

# ============================================================
# API KEYS - PLATFORM PUBLISHING
# ============================================================
# Required for multi-platform content distribution

# -----------------------------------------------------------
# YouTube Data API v3 - YouTube Shorts Publishing
# -----------------------------------------------------------
# Purpose: Upload and manage YouTube Shorts
# Cost: Free (10,000 quota units/day)
# Setup: Google Cloud Console → YouTube Data API v3
# Docs: See docs/api-setup-guide.md Section 5
#
# Setup:
#   1. Create Google Cloud Project
#   2. Enable YouTube Data API v3
#   3. Create OAuth 2.0 credentials (Desktop app)
#   4. Extract Client ID and Secret
#   5. Run: npm run youtube:auth (first time only)
#
# Rate limits: 1,600 units per upload (~6 videos/day)
YOUTUBE_CLIENT_ID=your-client-id.apps.googleusercontent.com
YOUTUBE_CLIENT_SECRET=your-client-secret
YOUTUBE_REDIRECT_URI=http://localhost:3000/auth/youtube/callback
# Update for production: YOUTUBE_REDIRECT_URI=https://yourdomain.com/auth/youtube/callback

# -----------------------------------------------------------
# TikTok Content Posting API - TikTok Video Publishing
# -----------------------------------------------------------
# Purpose: Upload and manage TikTok videos
# Cost: Free
# Setup: https://developers.tiktok.com/
# Docs: See docs/api-setup-guide.md Section 6
#
# Note: API approval required (1-4 weeks)
# During waiting period, use web automation as fallback
# Rate limits: 30 videos/day (after approval)
TIKTOK_CLIENT_KEY=your-tiktok-client-key
TIKTOK_CLIENT_SECRET=your-tiktok-client-secret
TIKTOK_MOCK_MODE=false

# TikTok Web Automation (Fallback during API approval)
TIKTOK_USE_AUTOMATION=false  # Set to true while waiting for API approval
TIKTOK_USERNAME=your-tiktok-username
TIKTOK_PASSWORD=your-tiktok-password

# -----------------------------------------------------------
# Instagram Graph API - Reels Publishing
# -----------------------------------------------------------
# Purpose: Upload and manage Instagram Reels
# Cost: Free
# Setup: Facebook Developer → Instagram Graph API
# Docs: See docs/api-setup-guide.md Section 7
#
# Setup:
#   1. Create Meta Developer account
#   2. Create Business app
#   3. Add Instagram products
#   4. Generate long-lived access token (60-day expiry)
#   5. Get business account ID
#
# Rate limits: 25 posts/day total, 10 Reels recommended
# Important: Token expires every 60 days - set calendar reminder to refresh
INSTAGRAM_ACCESS_TOKEN=your-long-lived-access-token
INSTAGRAM_BUSINESS_ACCOUNT_ID=your-instagram-business-account-id
FACEBOOK_APP_ID=your-facebook-app-id
FACEBOOK_APP_SECRET=your-facebook-app-secret
FACEBOOK_PAGE_ACCESS_TOKEN=your-facebook-page-access-token

# ============================================================
# API KEYS - STORAGE & INFRASTRUCTURE
# ============================================================

# -----------------------------------------------------------
# Cloudflare R2 - Video Storage & Delivery
# -----------------------------------------------------------
# Purpose: Scalable, S3-compatible video storage with CDN
# Cost: $0.015/GB stored + $0.01/GB egress (~$5-10/month for 500 videos)
# Setup: https://dash.cloudflare.com/ → R2
# Docs: See docs/api-setup-guide.md Section 8
#
# Steps:
#   1. Create Cloudflare account
#   2. Enable R2 storage
#   3. Create bucket: ai-affiliate-videos
#   4. Generate API token (Object Read/Write/Delete)
#   5. Extract credentials below
#
# R2_PUBLIC_URL format: https://bucket-name.account-id.r2.cloudflarestorage.com
# Optional: Use custom domain for prettier URLs
R2_ACCOUNT_ID=your-cloudflare-account-id
R2_ACCESS_KEY_ID=your-r2-access-key-id
R2_SECRET_ACCESS_KEY=your-r2-secret-access-key
R2_BUCKET_NAME=ai-affiliate-videos
R2_PUBLIC_URL=https://ai-affiliate-videos.abc123.r2.cloudflarestorage.com

# Storage configuration
STORAGE_DIR=/tmp/media
STORAGE_CLEANUP_ENABLED=true
STORAGE_CLEANUP_DAYS=7  # Delete local files after 7 days

# ============================================================
# AFFILIATE NETWORK APIs (OPTIONAL)
# ============================================================

# -----------------------------------------------------------
# Amazon Associates - Product Discovery
# -----------------------------------------------------------
# Purpose: Find and promote Amazon products
# Cost: Free (commission-based)
# Setup: https://affiliate-program.amazon.com/
# Docs: See docs/api-setup-guide.md
#
# Requirements:
#   1. Active Amazon Associates account (requires 3+ sales)
#   2. Approved for PA-API access
#   3. Get Access Key, Secret Key, Partner Tag
#
# Format: yourname-20 (must end with -20 or -21)
# Rate limits: 1 request/second, 8,640/day
AMAZON_ACCESS_KEY=your-amazon-access-key
AMAZON_SECRET_KEY=your-amazon-secret-key
AMAZON_PARTNER_TAG=yourname-20
AMAZON_REGION=us-east-1
AMAZON_MOCK_MODE=false

# -----------------------------------------------------------
# ShareASale - Affiliate Program Access
# -----------------------------------------------------------
# Purpose: Access ShareASale affiliate programs
# Cost: Free
# Setup: https://shareasale.com/ → API Settings
SHARESALE_MERCHANT_ID=your-merchant-id
SHARESALE_API_TOKEN=your-api-token
SHARESALE_API_SECRET=your-api-secret

# -----------------------------------------------------------
# CJ Affiliate - Affiliate Program Access
# -----------------------------------------------------------
# Purpose: Access CJ Affiliate programs
# Cost: Free
# Setup: https://www.cj.com/ → Developer Tools
CJ_API_KEY=your-cj-api-key

# ============================================================
# TEMPORAL ORCHESTRATION
# ============================================================
# Temporal is used for durable workflow orchestration
# Handles retries, scheduling, and long-running processes
TEMPORAL_ADDRESS=localhost:7233
TEMPORAL_NAMESPACE=default
TEMPORAL_RETENTION_DAYS=30

# ============================================================
# MONITORING & LOGGING
# ============================================================

# Log level: debug | info | warn | error
LOG_LEVEL=info

# Sentry Error Tracking
# Optional: For production error monitoring and alerting
# Setup: https://sentry.io/
SENTRY_DSN=
SENTRY_ENVIRONMENT=production
SENTRY_TRACES_SAMPLE_RATE=0.1  # % of transactions to sample

# Application Metrics
METRICS_ENABLED=true
METRICS_PORT=9090

# ============================================================
# SECURITY - SECRETS & ENCRYPTION
# ============================================================
# CRITICAL: Change all secrets in production! Minimum 32 chars required.
# See docs/api-credential-security.md for best practices
# Store these in AWS Secrets Manager or similar for production

# JWT Authentication
# Generate: openssl rand -base64 32 | tr -d "=" | cut -c1-32
JWT_SECRET=your-super-secret-jwt-key-change-this-min-32-chars
JWT_REFRESH_SECRET=your-super-secret-jwt-refresh-key-change-this-min-32-chars
JWT_EXPIRES_IN=15m
JWT_REFRESH_EXPIRES_IN=7d

# Data Encryption
# Generate: openssl rand -base64 24
# 32 hex characters or 24 base64 characters
ENCRYPTION_KEY=your-32-character-encryption-key-here

# Database password
DB_PASSWORD=your-secure-database-password

# Redis password (optional)
REDIS_PASSWORD=

# ============================================================
# RATE LIMITING
# ============================================================
# Global rate limiting for API endpoints
RATE_LIMIT_TTL=60          # TTL in seconds
RATE_LIMIT_MAX=100         # Max requests per TTL

# Per-API rate limiting (optional)
OPENAI_RATE_LIMIT_MAX=50
ANTHROPIC_RATE_LIMIT_MAX=30
ELEVENLABS_RATE_LIMIT_MAX=20
PIKALABS_RATE_LIMIT_MAX=10

# ============================================================
# CORS & SECURITY HEADERS
# ============================================================
# For development: http://localhost:3000
# For production: https://yourdomain.com
CORS_ORIGIN=http://localhost:3000
CORS_CREDENTIALS=true

# Content Security Policy
CSP_ENABLED=true
CSP_REPORT_URI=/api/csp-report

# ============================================================
# NOTIFICATIONS & WEBHOOKS
# ============================================================

# Discord Webhook (Optional - for notifications)
# Setup: Create Discord server → Webhook
DISCORD_WEBHOOK_URL=https://discord.com/api/webhooks/your/webhook/url

# Email Notifications (Optional)
SMTP_HOST=
SMTP_PORT=587
SMTP_USER=
SMTP_PASSWORD=
NOTIFICATION_EMAIL=your-email@example.com

# ============================================================
# FEATURE FLAGS & CONFIGURATION
# ============================================================

# Content Generation
CONTENT_GENERATION_ENABLED=true
AUTO_PUBLISH_ENABLED=false  # Set to true after full validation

# Platform Publishing
YOUTUBE_PUBLISHING_ENABLED=true
TIKTOK_PUBLISHING_ENABLED=true
INSTAGRAM_PUBLISHING_ENABLED=true
BLOG_PUBLISHING_ENABLED=true

# Analytics & Tracking
ANALYTICS_ENABLED=true
CONVERSION_TRACKING_ENABLED=true

# Auto-optimization
AUTO_OPTIMIZE_ENABLED=false  # Set to true for autonomous optimization
OPTIMIZATION_INTERVAL_HOURS=24
ROI_TARGET_MINIMUM=0.5      # Kill underperforming content
ROI_TARGET_SCALE=2.0        # Scale winning content

# ============================================================
# DEVELOPMENT TOOLS
# ============================================================
DEBUG=false
VERBOSE_LOGGING=false
MOCK_ALL_APIS=false  # Override all individual mock settings
