apiVersion: apps/v1
kind: Deployment
metadata:
  name: ai-affiliate-empire-api
  namespace: ai-affiliate-empire
  labels:
    app: ai-affiliate-empire
    component: api
spec:
  replicas: 3
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0  # Zero-downtime deployment
  selector:
    matchLabels:
      app: ai-affiliate-empire
      component: api
  template:
    metadata:
      labels:
        app: ai-affiliate-empire
        component: api
    spec:
      serviceAccountName: ai-affiliate-empire-sa

      # Init container for database migrations
      initContainers:
      - name: db-migrate
        image: ghcr.io/yourusername/ai-affiliate-empire:latest
        command: ['npx', 'prisma', 'migrate', 'deploy']
        envFrom:
        - configMapRef:
            name: ai-affiliate-empire-config
        - secretRef:
            name: ai-affiliate-empire-secrets
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/$(POSTGRES_DB)"

      containers:
      - name: api
        image: ghcr.io/yourusername/ai-affiliate-empire:latest
        imagePullPolicy: Always

        ports:
        - name: http
          containerPort: 3000
          protocol: TCP
        - name: metrics
          containerPort: 9091
          protocol: TCP

        envFrom:
        - configMapRef:
            name: ai-affiliate-empire-config
        - secretRef:
            name: ai-affiliate-empire-secrets

        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@postgres-service:5432/$(POSTGRES_DB)"
        - name: REDIS_URL
          value: "redis://redis-service:6379"

        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "1000m"

        livenessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 30
          periodSeconds: 10
          timeoutSeconds: 5
          failureThreshold: 3

        readinessProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 10
          periodSeconds: 5
          timeoutSeconds: 3
          failureThreshold: 3

        startupProbe:
          httpGet:
            path: /health
            port: http
          initialDelaySeconds: 0
          periodSeconds: 10
          timeoutSeconds: 3
          failureThreshold: 30

        securityContext:
          runAsNonRoot: true
          runAsUser: 1001
          allowPrivilegeEscalation: false
          readOnlyRootFilesystem: false
          capabilities:
            drop:
            - ALL

      # Security and scheduling
      securityContext:
        fsGroup: 1001

      affinity:
        podAntiAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 100
            podAffinityTerm:
              labelSelector:
                matchExpressions:
                - key: app
                  operator: In
                  values:
                  - ai-affiliate-empire
              topologyKey: kubernetes.io/hostname

---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: ai-affiliate-empire-sa
  namespace: ai-affiliate-empire
  annotations:
    eks.amazonaws.com/role-arn: arn:aws:iam::ACCOUNT_ID:role/ai-affiliate-empire-role
